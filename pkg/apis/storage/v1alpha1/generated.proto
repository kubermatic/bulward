/*
Copyright 2020 The Bulward Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.kubermatic.bulward.pkg.apis.storage.v1alpha1;

import "k8s.io/api/rbac/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// ObjectReference describes the link to another object in the same namespace.
message ObjectReference {
  // +kubebuilder:validation:MinLength=1
  optional string name = 1;
}

// Organization is internal representation for Organization in Bulward.
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Organization Namespace",type="string",JSONPath=".status.namespace.name"
// +kubebuilder:printcolumn:name="Display Name",type="string",JSONPath=".spec.metadata.displayName"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,shortName=iorg
message Organization {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional OrganizationSpec spec = 2;

  optional OrganizationStatus status = 3;
}

// OrganizationCondition contains details for the current condition of this Organization.
message OrganizationCondition {
  // Type is the type of the Organization condition, currently ('Ready').
  optional string type = 1;

  // Status is the status of the condition, one of ('True', 'False', 'Unknown').
  optional string status = 2;

  // LastTransitionTime is the last time the condition transits from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // Reason is the (brief) reason for the condition's last transition.
  optional string reason = 4;

  // Message is the human readable message indicating details about last transition.
  optional string message = 5;
}

// OrganizationList contains a list of Organization.
// +kubebuilder:object:root=true
message OrganizationList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Organization items = 2;
}

// OrganizationMetadata contains the metadata of the Organization.
message OrganizationMetadata {
  // DisplayName is the human-readable name of this Organization.
  // +kubebuilder:validation:MinLength=1
  optional string displayName = 1;

  // Description is the long and detailed description of the Organization.
  // +kubebuilder:validation:MinLength=1
  optional string description = 2;
}

// OrganizationSpec describes the desired state of Organization.
message OrganizationSpec {
  // Metadata	contains additional human readable Organization details.
  optional OrganizationMetadata metadata = 1;

  // Owners holds the RBAC subjects that represent the owners of this organization.
  // +kubebuilder:validation:MinItems=1
  repeated k8s.io.api.rbac.v1.Subject owners = 2;
}

// OrganizationStatus represents the observed state of Organization.
message OrganizationStatus {
  // NamespaceName is the name of the Namespace that the Organization manages.
  optional ObjectReference namespace = 1;

  // ObservedGeneration is the most recent generation observed for this Organization by the controller.
  optional int64 observedGeneration = 2;

  // Conditions represents the latest available observations of a Organization's current state.
  repeated OrganizationCondition conditions = 3;

  // DEPRECATED.
  // Phase represents the current lifecycle state of this object.
  // Consider this field DEPRECATED, it will be removed as soon as there
  // is a mechanism to map conditions to strings when printing the property.
  // This is only for display purpose, for everything else use conditions.
  optional string phase = 4;

  // Members enumerate all rbacv1.Subject mentioned in the Organization RoleBinding's
  repeated k8s.io.api.rbac.v1.Subject members = 5;
}

// Project is internal representation for Project in Bulward.
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Project Namespace",type="string",JSONPath=".status.namespace.name"
// +kubebuilder:printcolumn:name="Display Name",type="string",JSONPath=".metadata.name"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,shortName=iprj
message Project {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ProjectSpec spec = 2;

  optional ProjectStatus status = 3;
}

// ProjectCondition contains details for the current condition of this Project.
message ProjectCondition {
  // Type is the type of the Project condition, currently ('Ready').
  optional string type = 1;

  // Status is the status of the condition, one of ('True', 'False', 'Unknown').
  optional string status = 2;

  // LastTransitionTime is the last time the condition transits from one status to another.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // Reason is the (brief) reason for the condition's last transition.
  optional string reason = 4;

  // Message is the human readable message indicating details about last transition.
  optional string message = 5;
}

// ProjectList contains a list of Projects.
// +kubebuilder:object:root=true
message ProjectList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Project items = 2;
}

// ProjectSpec describes the desired state of Project.
message ProjectSpec {
  // Owners holds the RBAC subjects that represent the owners of this project.
  // +kubebuilder:validation:MinItems=1
  repeated k8s.io.api.rbac.v1.Subject owners = 1;
}

// ProjectStatus describes the observed state of Project.
message ProjectStatus {
  // NamespaceName is the name of the Namespace that the Project manages.
  optional ObjectReference namespace = 1;

  // ObservedGeneration is the most recent generation observed for this Project by the controller.
  optional int64 observedGeneration = 2;

  // Conditions represents the latest available observations of a Project's current state.
  repeated ProjectCondition conditions = 3;

  // DEPRECATED.
  // Phase represents the current lifecycle state of this object.
  // Consider this field DEPRECATED, it will be removed as soon as there
  // is a mechanism to map conditions to strings when printing the property.
  // This is only for display purpose, for everything else use conditions.
  optional string phase = 4;

  // Members enumerate all rbacv1.Subject mentioned in the Project's RoleBinding's
  repeated k8s.io.api.rbac.v1.Subject members = 5;
}
